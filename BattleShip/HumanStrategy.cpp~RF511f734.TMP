#include "stdafx.h"
#include "HumanStrategy.h"
#include "Helper.h"
#include <iostream> 
#include <string>

HumanStrategy::HumanStrategy(hitboard::HitBoard & hitBoard, shipboard::ShipBoard & shipBoard)
    :m_hitBoard(hitBoard),
    m_shipBoard(shipBoard)
{}

HumanStrategy::~HumanStrategy()
{}

cell::Cell HumanStrategy::Fire()
{
    std::cout << "Please select location to attack:" << std::endl;
    std::string attackLocation = "";
    std::cin >> attackLocation;

    cell::Cell attackCell;
    if (!StringToCell(attackLocation, attackCell))
    {
        return cell::Cell();
    }

    return attackCell;
}

bool HumanStrategy ::GenerateShip()
{
    int maxNoOfShips = 1;

    while (maxNoOfShips < 8)
    {
        cell::Cell startPosition, endPosition;
        std::cout << "Enter ship start point:" << std::endl;
        std::string start = "";
        std::cin >> start;

        if (!StringToCell(start, startPosition))
        {
            continue;
        }

        std::cout << "Enter ship end point:" << std::endl;
        std::string end = "";
        std::cin >> end;

        if (!StringToCell(end, endPosition))
        {
            continue;
        }

        if (!m_shipBoard.AddShip(startPosition, endPosition))
        {
            continue;
        }

        ++maxNoOfShips;

        std::cout << "You have entered: " << maxNoOfShips << std::endl;
    }

    return true;   
}

