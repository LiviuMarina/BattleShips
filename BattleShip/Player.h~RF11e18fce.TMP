#ifndef PLAYER_H
#define PLAYER_H

#include "HitBoard.h"
#include "ShipBoard.h"
#include "Strategy.h"
#include <memory>

enum PlayerStrategy
{
    humanStrategy,
    computerStrategy
};

class Player
{
public:

    /**
    *  \brief Default constructor.
    */
    Player();

    /**
    *  \brief Destructor.
    */
    ~Player();

    /**
    *  \brief Select the strategy for the player.
    *  \param[in] playerStrategy Player strategy. Can be computer or human.
    */
    void SelectStrategy(PlayerStrategy playerStrategy);

    /**
    *  \brief Get a reference to the ship board.
    *  \details The ship board is containing the ship added by player.
    *  \return A reference to the ship board.
    */
    const ShipBoard& GetShipBoard() const
    {
        return m_shipBoard;
    }

    /**
    *  \brief Get a reference to the hit board.
    *  \details Hit board will contain the marks for the hits.
    *  \return A reference to the hit board.
    */
    const HitBoard& GetHitBoard() const
    {
        return m_hitBoard;
    }

    //Get player strategy
    std::shared_ptr<Strategy> GetStrategy() const
    {
        return m_strategy;
    }

    void InitBoards();

    //Mark the Cell that was hit
    void Mark(Cell & cell);

    //Attack opponent
    Cell Fire();

    bool Defeated();

private:

    std::shared_ptr<Strategy> m_strategy;

    ShipBoard m_shipBoard;
    HitBoard m_hitBoard;
};


#endif //PLAYER_H